#Basic 1
#1. Check what's the type of the following values in the python:
print(type (1))
print(type (3.14))
print(type ("Big Data!"))
print(type ('Big Data!'))
print(type (True))
print(type (False))
print(type ([1,2,"intruder",3]))

#Basic 2
#2. Write a script that prints the integers from 1 to 100. For multiples of three print "Fizz" instead
#, and for the multiples of five print "Buzz". For numbers which are multiples of both print "FizzBuzz".

for i in range (1,101):
	if i%3==0 and i%5 == 0:
		print ("FIZZBUZZ")
	elif i%3==0:
		print ("FIZZ")
	elif i%5==0:
		print("BUZZ")
	else:
		print (i)


#Basic 3
#3. Could you find the maximum or minimum integer value in a list. If we list all the natural
#numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these
#multiples is 23. Find the sum of all the multiples of 3 or 5 below 1000.

d3 = 0
d5 = 0
d35 = 0

for i in range (1,1000):

	if i%3 == 0 and i%5 == 0:
		print (i)
		d35 = d35 + i
	elif i%3==0:
		print (i)
		d3 = d3 + i
	elif i%5==0:
		print (i)
		d5 = d5 + i
d3 + d5 + d35

#Basic 4
#4. Write a script that takes out all the vowels and response with shortened version the string.
#Your script should not be case sensitive.

word = "Canada"
vowels =  ("a", "e", "i", "o","u", "A", "E", "I", "O", "U")
for vowel in word:
        if vowel in vowels:          
                word = word.replace(vowel, "")
print (word)

#Advanced 1

#1. Write a Python program to count the number of characters (character frequency) in a string.
#The expected results are two options: [Example: Babak Khosravifar]
#○ Sorted by alphabetical order [{‘a’:4, ‘b’:2, ‘f’:1, ‘i’:1, …..}]
#○ Sorted by the repetition of characters in descending order [{‘a’:4, ‘b’:2, ‘k’:2, ‘r’:2,…..}]

test_str = "Lifeisshort"
all_freq = {} 
  
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
  
# printing result  
print ("Count of all characters in "+ test_str+ " :\n " +  str(all_freq)) 
print(sorted(all_freq.items()))
print(sorted(all_freq.items(),key=lambda x: x[1]))
print(sorted(all_freq.items(),key=lambda x: x[1], reverse=True))

#Advanced 2
#2. Write a Python program to count the occurrences of each word in a given sentence.
#input_string ='Apple Banana Grape Orange Banana Orange Apple Grape Grape Mango'
    
# break the string into list of words 
input_string_list = input_string.split() 

# gives set of unique words 
unique_string_set = set(input_string_list) 

print("input_string_list = ", input_string_list)
print("unique_string_set = ", unique_string_set)
for entry in unique_string_set : 
    print('Frequency of ', entry , 'is :', input_string_list.count(entry)) 


#Advanced 3
#3. Write a Python program that accepts a comma separated sequence of words as input and
#prints the unique words in sorted form (alphanumerically)

items=[x for x in input("enter data to sort").split(',')]
items.sort()
print ("Sorted data are ",' '.join(items))

blabla = "comma separated sequence of words as input"
blabla = "comma","separated","sequence","of","words","as","input"
blabla
blabla[0]
sorted(blabla,key=lambda tup: tup[1])
sorted(blabla)
sorted(blabla,reverse=True)
 

#Reach 1
#1. Write a program that reads two lists of numbers (4 items minimum) and merge them by
#sorting them out ignoring duplicates

a = 1,2,3,4,5,6,7
b = 8,9,10,11
c = 5,6,7,8,9
print(a+b+c)
print (set(a+b+c))

#Reach 1
#2. Improve the previous code by ignoring the ones that could be written as a linear combination
#of any other two numbers (13=2*5+1*3), so if 3 and 5 are there, you should drop 13 if seen.

